// Author       : Michael Philipp ADAMS, M.Sc. 
// Company      : University of Luxembourg
// Department   : Department of Physics and Materials Sciences
// Group        : NanoMagnetism Group
// Group Leader : Prof. Andreas Michels
// Version      : 24 June 2025
// OS           : Linux
// Language     : CUDA C++

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// foldernames ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

NucDataPath = RealSpaceData_Cubez/NucData;               // foldername where the nuclear data is stored
MagDataPath = RealSpaceData_Cubez/MagData;		      	 // foldername where the magnetization data is stored
StructDataFilename = RealSpaceData_Cubez/StructData.csv; // foldername where the structure data is stored
foldernameSANSData = MagSANS_Output_Cubez;    			 // foldername where the SANS data is to be stored

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Data selection /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

NucData_activate = 0;	  // activate nuclear data (activate: 1, deactivate: 0)
MagData_activate = 1;	  // activate magnetic data (activate: 1, deactivate: 0)
StructData_activate = 0;  // activate structure data (activae: 1, deactivate: 0)

Exclude_Zero_Moments = 0; // exclude magnetization data with zero magnetic moments (activate: 1, deactive: 0)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fourier approach select ////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Fourier_Approach = micromagnetic;	   // (atomistic, micromagnetic)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// data selection modi ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Loop_Modus = 0;		// select loop modus with 1, deselect loop modus with 0 (boolean selector)
Loop_From = 1;		// start index of the parameter loop
Loop_To = 20; 		// end index of the parameter loop

User_Selection = {1}; // selection of file indices by user (ignored if loop modus is active)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// xyz-data unit factor ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

XYZ_Unit_Factor = 1e9;	// unit factor for the xyz-data, the expected unit is in nanometers,
						// if e.g. the physical unit is meters, then unit factor is equal to 1e9

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// micromagnetic properties ///////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Cell_Nuclear_SLD = 8e14; 		   // nuclear scattering length density in units of 1/m^2
Cell_Magnetization = 486e3;        // magnitude unit of the uniform cell magnetization in units of Ampere per Meter (A/m)
Cuboid_Cell_Size_x = 2;	           // cell size of the discretization box in x-direction in units of nanometers (nm)
Cuboid_Cell_Size_y = 2;		       // cell size of the discretization box in y-direction in units of nanometers (nm)
Cuboid_Cell_Size_z = 2;		       // cell size of the discretization box in z-direction in units of nanometers (nm)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// scattering volume //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Scattering_Volume_V = 1.47456e-22;	// scattering volume in cube meters (m^3)  [R = 5.0*1e-9]

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// rotation matrix set-up /////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RotMat_alpha = 0.0;		// polar rotation angle in degree
RotMat_beta = 0.0;  	// azimuth rotation angle in degree (rotates the sample in the xy-plane)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// polarization vector ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Polarization_x = 0.0;	// x-component of the polarization vector
Polarization_y = 0.0;	// y-component of the polarization vector
Polarization_z = 1.0;	// z-component of the polarization vector

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// q- and r-space dimensions //////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Number_Of_q_Points = 1000;		   	// number of points for the radial q-space coordinate	
Number_Of_theta_Points = 1000;		// number of points for the azimuthal q-space coordinate
 	
Number_Of_r_Points = 1000;		   	// number of points for the radial r-space coordinate
Number_Of_alpha_Points = 1000;      // number of points for the azimuthal r-space coordinate

q_max = 0.9;					// maximum value of the radial q-space coordinate in reciprocal nanometers (1/nm)
r_max = 80.0;	        		// maxium value for the dimensionless radial real-space coordinate in nanometers (nm)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
// angular spectrum analyser options //////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

k_max = 10; 		// highes mode number k_max = 0, 1, 2, 3, ...
Angular_Spec = 1;   // activate angular spectrum analyser (0, 1)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
// output selections //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// activate output: 1, // deactivate output: 0

Fourier_Gamma = 1;         	// components of the magnetization cross correlation matrix

Nuclear_2D = 1;				// 2D nuclear SANS cross section
Unpolarized_2D = 1;     	// 2D unpolarized magnetic SANS cross section
Polarized_2D = 1;			// 2D polarized magnetic SANS cross section
NuclearMagnetic_2D = 1;		// 2D nuclear-magnetic intereference SANS cross section
AVG_SpinFlip_2D = 1;        // 2D spin-filp magnetic SANS cross section
Chiral_2D = 1;           	// 2D chiral magnetic SANS cross section
PM_SpinFlip_2D = 1;      	// 2D plus-minus spin-flip channel SANS cross section
MP_SpinFlip_2D = 1;     	// 2D minus-plus spin-flip channel SANS cross section
PP_NonSpinFlip_2D = 1;      // 2D plus-plus non-spin-flip channel SANS cross section
MM_NonSpinFlip_2D = 1;     	// 2D minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_2D = 1;			// 2D plus sanspol magnetic SANS cross section
M_SANSPOL_2D = 1;			// 2D minus sanspol magnetic SANS cross section

Nuclear_1D = 1;             // 1D nuclear SANS cross section (azimuthal averaged)
Unpolarized_1D = 1;      	// 1D unpolarized SANS cross section (azimuthal averaged)
Polarized_1D = 1;			// 1D polarized magnetic SANS cross section
NuclearMagnetic_1D = 1;		// 1D nuclear-magnetic intereference SANS cross section
AVG_SpinFlip_1D = 1;        // 1D spin-flip SANS cross section (azimuthal averaged)
Chiral_1D = 1;           	// 1D chiral SANS cross section (absolute azimuthal averaged)
PM_SpinFlip_1D = 1;      	// 1D plus-minus spin-flip channel SANS cross section
MP_SpinFlip_1D = 1;     	// 1D minus-plus spin-flip channel SANS cross section
PP_NonSpinFlip_1D = 1;      // 1D plus-plus non-spin-flip channel SANS cross section
MM_NonSpinFlip_1D = 1;     	// 1D minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_1D = 1;			// 1D plus sanspol SANS cross section
M_SANSPOL_1D = 1;			// 1D minus sanspol SANS cross section

Nuclear_PairDist_1D = 1;		// 1D pair-distance distribution function of the nuclear SANS cross section
Unpolarized_PairDist_1D = 1;    // 1D pair-distance distribution function of the unpolarized magnetic SANS cross section
Polarized_PairDist_1D = 1;		// 1D pair-distance distribution frunction of the polarized magnetic SANS cross section
NucMag_PairDist_1D = 1;			// 1D pair-distance distribution function of the nuclear-magnetic interference SANS cross section 
Chiral_PairDist_1D = 1;         // 1D pair-distance distribution function of the chiral SANS cross section
SpinFlip_PairDist_1D = 1;       // 1D pair-distance distribution function of the spin-flip SANS cross section
PM_SpinFlip_PairDist_1D = 1;	// 1D pair-distance distribution function of the plus-minus spin-flip channel SANS cross section
MP_SpinFlip_PairDist_1D = 1;	// 1D pair-distance distribution function of the minus-plus spin-flip channel SANS cross section
PP_NonSpinFlip_PairDist_1D = 1;	// 1D pair-distance distribution function of the plus-plu non-spin-flip channel SANS cross section
MM_NonSpinFlip_PairDist_1D = 1;	// 1D pair-distance distribution function of the minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_PairDist_1D = 1;		// 1D pair-distance distribution function of the plus sanspol SANS cross section
M_SANSPOL_PairDist_1D = 1;		// 1D pair-distance distribution function of the minus sanspol SANS cross section

Nuclear_Corr_1D = 1;			// 1D correlation function of the nuclear SANS cross section
Unpolarized_Corr_1D = 1;        // 1D correlation function of the unpolarized magnetic SANS cross section
Polarized_Corr_1D = 1;			// 1D correlation function of the polarized magnetic SANS cross section
NucMag_Corr_1D = 1;				// 1D correlation function of the nuclear-magnetic interference SANS cross section
Chiral_Corr_1D = 1;             // 1D correlation function of the chiral SANS cross section
SpinFlip_Corr_1D = 1;           // 1D correlation function of the spin-flip SANS cross section
PM_SpinFlip_Corr_1D = 1;		// 1D correlation function of the plus-minus spin-flip channel SANS cross section
MP_SpinFlip_Corr_1D = 1;		// 1D correlation function of the minus-plus spin-flip channel SANS cross section
PP_NonSpinFlip_Corr_1D = 1;		// 1D correlation function of the plus-plu non-spin-flip channel SANS cross section
MM_NonSpinFlip_Corr_1D = 1;		// 1D correlation function of the minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_Corr_1D = 1;			// 1D correlation function of the plus sanspol SANS cross section
M_SANSPOL_Corr_1D = 1;			// 1D correlation function of the minus sanspol SANS cross section

Nuclear_Corr_2D = 1;			// 2D correlation function of the nuclear SANS cross section
Unpolarized_Corr_2D = 1;		// 2D correlation function of the unpolarized SANS cross section
Polarized_Corr_2D = 1;			// 2D correlation function of the polarized SANS cross section
NuclearMagnetic_Corr_2D = 1;	// 2D correlation function of the nuclear-magnetic interference SANS cross section
SpinFlip_Corr_2D = 1;			// 2D correlation function of the spin-flip SANS cross section
Chiral_Corr_2D = 1;				// 2D correlation function of the chiral SANS cross section
PM_SpinFlip_Corr_2D = 1;		// 2D correlation function of the plus-minus spin-flip channel SANS cross section
MP_SpinFlip_Corr_2D = 1;		// 2D correlation function of the minus-minus spin-flip channel SANS cross section
PP_NonSpinFlip_Corr_2D = 1;		// 2D correlation function of the plus-plus non-spin-flip channel SANS cross section
MM_NonSpinFlip_Corr_2D = 1;		// 2D correlation function of the minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_Corr_1D = 1;			// 2D correlation function of the plus sanspol SANS cross section
M_SANSPOL_Corr_1D = 1;			// 2D correlation function of the minus sanspol SANS cross section
