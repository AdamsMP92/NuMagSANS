<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_nu_mag_s_a_n_slib___input_file_interpreter_8h" kind="file" language="C++">
    <compoundname>NuMagSANSlib_InputFileInterpreter.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">cuda_runtime.h</includes>
    <includes local="no">cublas_v2.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">chrono</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="_nu_mag_s_a_n_slib_8h" local="yes">src/NuMagSANSlib.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/NuMagSANSlib_InputFileInterpreter.h</label>
        <link refid="_nu_mag_s_a_n_slib___input_file_interpreter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="13">
        <label>cublas_v2.h</label>
      </node>
      <node id="12">
        <label>cuda_runtime.h</label>
      </node>
      <node id="16">
        <label>dirent.h</label>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="5">
        <label>sys/stat.h</label>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="17">
        <label>unistd.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/NuMagSANSlib.h</label>
        <link refid="_nu_mag_s_a_n_slib_8h_source"/>
      </node>
      <node id="1">
        <label>src/NuMagSANSlib_InputFileInterpreter.h</label>
        <link refid="_nu_mag_s_a_n_slib___input_file_interpreter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_input_file_data" prot="public">InputFileData</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1aca7adf9bfb3cf0d5093d13724c971ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Compute_RotMat</definition>
        <argsstring>(float alpha, float beta, float *RotMat)</argsstring>
        <name>Compute_RotMat</name>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RotMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="149" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="149" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1adda0f74645157482a1f566e7e0f27331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string extract_value</definition>
        <argsstring>(const string &amp;line)</argsstring>
        <name>extract_value</name>
        <param>
          <type>const string &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="173" column="8" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="173" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1a5be1fdd2696d045e4d7b94e5bde85c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseBool</definition>
        <argsstring>(const std::string &amp;line, const std::string &amp;property, bool &amp;variable, bool &amp;flag)</argsstring>
        <name>parseBool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="185" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="185" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1aebf7e344864cea31da1e6c7d87e20965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseInt</definition>
        <argsstring>(const std::string &amp;line, const std::string &amp;property, int &amp;variable, bool &amp;flag)</argsstring>
        <name>parseInt</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="194" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="194" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1a88942996e0fc9665de5a06adc9bcf232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseFloat</definition>
        <argsstring>(const std::string &amp;line, const std::string &amp;property, float &amp;variable, bool &amp;flag)</argsstring>
        <name>parseFloat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="203" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1a88e141f69427c96644952c88600004d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseString</definition>
        <argsstring>(const std::string &amp;line, const std::string &amp;property, std::string &amp;variable, bool &amp;flag)</argsstring>
        <name>parseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="212" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1a1e5dc883478afe8a376eb5ee8e5abcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void User_Selection_To_Int_Array</definition>
        <argsstring>(int *Idx, int Number_of_Comma, string my_string)</argsstring>
        <name>User_Selection_To_Int_Array</name>
        <param>
          <type>int *</type>
          <declname>Idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Number_of_Comma</declname>
        </param>
        <param>
          <type>string</type>
          <declname>my_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="222" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="222" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1acefcd1d43e234c479915867da38e9f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Number_Of_Comma_In_String</definition>
        <argsstring>(int *N, string my_string)</argsstring>
        <name>Number_Of_Comma_In_String</name>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>string</type>
          <declname>my_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="249" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="249" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="_nu_mag_s_a_n_slib___input_file_interpreter_8h_1a3bc93c1b63b904fb9952346a88377c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadCSV__Input_File_Interpreter</definition>
        <argsstring>(string filename, InputFileData *InputData)</argsstring>
        <name>ReadCSV__Input_File_Interpreter</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="struct_input_file_data" kindref="compound">InputFileData</ref> *</type>
          <declname>InputData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NuMagSANSlib_InputFileInterpreter.h" line="263" column="6" bodyfile="src/NuMagSANSlib_InputFileInterpreter.h" bodystart="263" bodyend="455"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NuMagSANSlib_InputFileInterpreter.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Michael<sp/>Philipp<sp/>ADAMS,<sp/>M.Sc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Company<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>University<sp/>of<sp/>Luxembourg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Department<sp/><sp/><sp/>:<sp/>Department<sp/>of<sp/>Physics<sp/>and<sp/>Materials<sp/>Sciences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NanoMagnetism<sp/>Group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group<sp/>Leader<sp/>:<sp/>Prof.<sp/>Andreas<sp/>Michels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>28<sp/>November<sp/>2024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Linux<sp/>Ubuntu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Language<sp/><sp/><sp/><sp/><sp/>:<sp/>CUDA<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cublas_v2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>##############################################################################################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>##############################################################################################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_input_file_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_input_file_data" kindref="compound">InputFileData</ref>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>NucDataPath;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>MagDataPath;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>StructDataFilename;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>SANSDataFoldername;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Fourier_Approach;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Loop_Modus;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Loop_From;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Loop_To;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>User_Selection;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Number_Of_User_Selections;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*User_Selection_IndexArray;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_q;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_theta;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_r;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_alpha;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q_max;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r_max;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Scattering_Volume_V;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cell_nuclear_sld;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cell_magnetization;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cuboid_cell_size_x;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cuboid_cell_size_y;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cuboid_cell_size_z;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RotMat_alpha;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RotMat_beta;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RotMat[9];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>XYZ_Unit_Factor;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Polarization[3];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NucData_activate_flag;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MagData_activate_flag;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StructData_activate_flag;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExcludeZeroMoments_flag;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Check_InputFile_Flag;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_fourier_correlation_matrix_flag;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_nuclear_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_polarized_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_spin_flip_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_chiral_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pm_spin_flip_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mp_spin_flip_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pp_non_spin_flip_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mm_non_spin_flip_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_p_sanspol_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_m_sanspol_magnetic_SANS_cross_section_2D_flag;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_nuclear_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_magnetic_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_polarized_magnetic_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_magnetic_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_spin_flip_magnetic_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_chiral_magnetic_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pm_spin_flip_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mp_spin_flip_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pp_non_spin_flip_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mm_non_spin_flip_SANS_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_m_sanspol_cross_section_1D_flag;<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_p_sanspol_cross_section_1D_flag;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_polarized_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_magnetic_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_spin_flip_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_chiral_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pm_spin_flip_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mp_spin_flip_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pp_non_spin_flip_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mm_non_spin_flip_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_p_sanspol_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_m_sanspol_pair_distance_distribution_1D_flag;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_correlation_function_1D_flag;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_polarized_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_magnetic_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_spin_flip_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_chiral_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pm_spin_flip_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mp_spin_flip_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pp_non_spin_flip_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mm_non_spin_flip_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_p_sanspol_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_m_sanspol_correlation_function_1D_flag;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_unpolarized_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_polarized_correlation_function_2D_flag;<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_nuclear_magnetic_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_spin_flip_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_chiral_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pm_spin_flip_correlation_function_2D_flag;<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mp_spin_flip_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_pp_non_spin_flip_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_mm_non_spin_flip_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_m_sanspol_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_p_sanspol_correlation_function_2D_flag;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zy-rotation<sp/>matrix<sp/>where<sp/>alpha<sp/>is<sp/>the<sp/>polar<sp/>angle<sp/>and<sp/>beta<sp/>is<sp/>the<sp/>azimuth<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Compute_RotMat(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>RotMat){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ordering<sp/>of<sp/>the<sp/>rotation<sp/>matrix:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RotMat<sp/>=<sp/>[RotMat[0],<sp/>RotMat[3],<sp/>RotMat[6];<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotMat[1],<sp/>RotMat[4],<sp/>RotMat[7];<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotMat[2],<sp/>RotMat[5],<sp/>RotMat[8]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>alpha<sp/>*<sp/>M_PI/180.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>beta<sp/>*<sp/>M_PI/180.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[0]<sp/>=<sp/>cos(alpha)<sp/>*<sp/>cos(beta);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[1]<sp/>=<sp/>cos(alpha)<sp/>*<sp/>sin(beta);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[2]<sp/>=<sp/>-sin(alpha);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[3]<sp/>=<sp/>-sin(beta);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[4]<sp/>=<sp/>cos(beta);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[6]<sp/>=<sp/>cos(beta)<sp/>*<sp/>sin(alpha);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[7]<sp/>=<sp/>sin(alpha)<sp/>*<sp/>sin(beta);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>RotMat[8]<sp/>=<sp/>cos(alpha);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>extract_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;line){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>equality_symbol_index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>semicolon_symbol_index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>space_symbol_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>string_to_be_interpreted<sp/>=<sp/>line.substr(equality_symbol_index+1,<sp/>semicolon_symbol_index-equality_symbol_index-1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(string_to_be_interpreted.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;=<sp/>string_to_be_interpreted.size()){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space_symbol_index<sp/>=<sp/>string_to_be_interpreted.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_to_be_interpreted.erase(space_symbol_index,<sp/>1);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_to_be_interpreted;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseBool(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>property,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>flag){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>line.find(property);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>(bool)<sp/>stoi(extract_value(line));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>variable<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>flag){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>line.find(property);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>stoi(extract_value(line));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>variable<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>property,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>flag){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>line.find(property);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>stof(extract_value(line));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>variable<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>property,<sp/>std::string&amp;<sp/>variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>flag){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>line.find(property);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>extract_value(line);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>variable<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Interpreting<sp/>User_Selection<sp/>to<sp/>integer<sp/>array<sp/>##########################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>User_Selection_To_Int_Array(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*Idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Number_of_Comma,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>my_string){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Symbol_Idx[Number_of_Comma<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Symbol_Start<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Symbol_End<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Symbol_Comma<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Symbol_Counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>my_string.size();<sp/>i++){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(my_string.at(i)<sp/>==<sp/>Symbol_Start.at(0)<sp/>||<sp/>my_string.at(i)<sp/>==<sp/>Symbol_End.at(0)<sp/>||<sp/>my_string.at(i)<sp/>==<sp/>Symbol_Comma.at(0)){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Symbol_Idx[Symbol_Counter]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Symbol_Counter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Sub_String;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space_symbol_index;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;Number_of_Comma<sp/>+<sp/>1;<sp/>i++){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sub_String<sp/>=<sp/>my_string.substr(Symbol_Idx[i]+1,<sp/>Symbol_Idx[i+1]-Symbol_Idx[i]-1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Sub_String.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;=<sp/>Sub_String.size()){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space_symbol_index<sp/>=<sp/>Sub_String.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sub_String.erase(space_symbol_index,<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Idx[i]<sp/>=<sp/>stoi(Sub_String);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>Number<sp/>of<sp/>Comma<sp/>in<sp/>string<sp/>#########################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Number_Of_Comma_In_String(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>my_string){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>String_Length<sp/>=<sp/>my_string.size();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Comma_Counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Comma<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>String_Length;<sp/>i++){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(my_string.at(i)<sp/>==<sp/>Comma.at(0)){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comma_Counter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*N<sp/>=<sp/>Comma_Counter;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ReadCSV__Input_File_Interpreter(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename,<sp/><ref refid="struct_input_file_data" kindref="compound">InputFileData</ref>*InputData){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##########################################################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##<sp/>Run<sp/>-<sp/>Input<sp/>File<sp/>Interpreter<sp/>##########################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##########################################################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Check_InputFile_Flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>fin;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.open(filename);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>string_to_be_interpreted;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Check_Flag[92];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;92;<sp/>k++){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check_Flag[k]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Interpreter<sp/>found<sp/>the<sp/>following<sp/>commands:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(fin,<sp/>line)){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_counter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Loop_Modus&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Loop_Modus,<sp/>Check_Flag[0]);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Loop_From&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Loop_From,<sp/>Check_Flag[1]);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Loop_To&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Loop_To,<sp/>Check_Flag[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Number_Of_q_Points&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;N_q,<sp/>Check_Flag[3]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Number_Of_theta_Points&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;N_theta,<sp/>Check_Flag[4]);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Number_Of_r_Points&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;N_r,<sp/>Check_Flag[5]);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt(line,<sp/></highlight><highlight class="stringliteral">&quot;Number_Of_alpha_Points&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;N_alpha,<sp/>Check_Flag[6]);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;User_Selection&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;User_Selection,<sp/>Check_Flag[7]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;q_max&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;q_max,<sp/>Check_Flag[8]);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;r_max&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;r_max,<sp/>Check_Flag[9]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;XYZ_Unit_Fact&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;XYZ_Unit_Factor,<sp/>Check_Flag[10]);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;RotMat_alpha&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;RotMat_alpha,<sp/>Check_Flag[11]);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;RotMat_beta&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;RotMat_beta,<sp/>Check_Flag[12]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Fourier_Gamma&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_fourier_correlation_matrix_flag,<sp/>Check_Flag[13]);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Unpolarized_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[14]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;AVG_SpinFlip_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_spin_flip_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[15]);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Chiral_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_chiral_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[16]);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PM_SpinFlip_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[17]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MP_SpinFlip_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mp_spin_flip_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[18]);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Unpolarized_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_magnetic_SANS_cross_section_1D_flag,<sp/>Check_Flag[19]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;AVG_SpinFlip_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_spin_flip_magnetic_SANS_cross_section_1D_flag,<sp/>Check_Flag[20]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Chiral_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_chiral_magnetic_SANS_cross_section_1D_flag,<sp/>Check_Flag[21]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Unpolarized_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_pair_distance_distribution_1D_flag,<sp/>Check_Flag[22]);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Unpolarized_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_correlation_function_1D_flag,<sp/>Check_Flag[23]);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;SpinFlip_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_spin_flip_pair_distance_distribution_1D_flag,<sp/>Check_Flag[24]);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;SpinFlip_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_spin_flip_correlation_function_1D_flag,<sp/>Check_Flag[25]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Chiral_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_chiral_pair_distance_distribution_1D_flag,<sp/>Check_Flag[26]);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Chiral_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_chiral_correlation_function_1D_flag,<sp/>Check_Flag[27]);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Unpolarized_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_correlation_function_2D_flag,<sp/>Check_Flag[28]);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;SpinFlip_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_spin_flip_correlation_function_2D_flag,<sp/>Check_Flag[29]);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Chiral_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_chiral_correlation_function_2D_flag,<sp/>Check_Flag[30]);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;MagDataPath&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;MagDataPath,<sp/>Check_Flag[31]);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;foldernameSANSData&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;SANSDataFoldername,<sp/>Check_Flag[32]);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Scattering_Volume_V&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Scattering_Volume_V,<sp/>Check_Flag[33]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;Fourier_Approach&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Fourier_Approach,<sp/>Check_Flag[34]);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Cell_Magnetization&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;cell_magnetization,<sp/>Check_Flag[35]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Cuboid_Cell_Size_x&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;cuboid_cell_size_x,<sp/>Check_Flag[36]);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Cuboid_Cell_Size_y&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;cuboid_cell_size_y,<sp/>Check_Flag[37]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Cuboid_Cell_Size_z&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;cuboid_cell_size_z,<sp/>Check_Flag[38]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarization_x&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Polarization[0],<sp/>Check_Flag[39]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarization_y&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Polarization[1],<sp/>Check_Flag[40]);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarization_z&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;Polarization[2],<sp/>Check_Flag[41]);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarized_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_polarized_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[42]);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NuclearMagnetic_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[43]);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PP_NonSpinFlip_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pp_non_spin_flip_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[44]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MM_NonSpinFlip_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mm_non_spin_flip_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[45]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;P_SANSPOL_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_p_sanspol_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[46]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;M_SANSPOL_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_m_sanspol_magnetic_SANS_cross_section_2D_flag,<sp/>Check_Flag[47]);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;NucDataPath&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;NucDataPath,<sp/>Check_Flag[48]);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NucData_activate&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;NucData_activate_flag,<sp/>Check_Flag[49]);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MagData_activate&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;MagData_activate_flag,<sp/>Check_Flag[50]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Exclude_Zero_Moments&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;ExcludeZeroMoments_flag,<sp/>Check_Flag[51]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Nuclear_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_nuclear_SANS_cross_section_1D_flag,<sp/>Check_Flag[52]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseString(line,<sp/></highlight><highlight class="stringliteral">&quot;StructDataFilename&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;StructDataFilename,<sp/>Check_Flag[53]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;StructData_activate&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;StructData_activate_flag,<sp/>Check_Flag[54]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat(line,<sp/></highlight><highlight class="stringliteral">&quot;Cell_Nuclear_SLD&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;cell_nuclear_sld,<sp/>Check_Flag[55]);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarized_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_polarized_magnetic_SANS_cross_section_1D_flag,<sp/>Check_Flag[56]);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NuclearMagnetic_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_magnetic_SANS_cross_section_1D_flag,<sp/>Check_Flag[57]);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarized_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_polarized_pair_distance_distribution_1D_flag,<sp/>Check_Flag[58]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarized_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_polarized_correlation_function_1D_flag,<sp/>Check_Flag[59]);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Nuclear_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_pair_distance_distribution_1D_flag,<sp/>Check_Flag[60]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Nuclear_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_correlation_function_1D_flag,<sp/>Check_Flag[61]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PM_SpinFlip_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_SANS_cross_section_1D_flag,<sp/>Check_Flag[62]);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MP_SpinFlip_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mp_spin_flip_SANS_cross_section_1D_flag,<sp/>Check_Flag[63]);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PP_NonSpinFlip_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pp_non_spin_flip_SANS_cross_section_1D_flag,<sp/>Check_Flag[64]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MM_NonSpinFlip_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mm_non_spin_flip_SANS_cross_section_1D_flag,<sp/>Check_Flag[65]);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;P_SANSPOL&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_p_sanspol_cross_section_1D_flag,<sp/>Check_Flag[66]);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;M_SANSPOL&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_m_sanspol_cross_section_1D_flag,<sp/>Check_Flag[67]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Nuclear_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_correlation_function_2D_flag,<sp/>Check_Flag[68]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Polarized_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_polarized_correlation_function_2D_flag,<sp/>Check_Flag[69]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NuclearMagnetic_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_magnetic_correlation_function_2D_flag,<sp/>Check_Flag[70]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PM_SpinFlip_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_correlation_function_2D_flag,<sp/>Check_Flag[71]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MP_SpinFlip_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_correlation_function_2D_flag,<sp/>Check_Flag[72]);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PP_NonSpinFlip_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pp_non_spin_flip_correlation_function_2D_flag,<sp/>Check_Flag[73]);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MM_NonSpinFlip_Corr_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mm_non_spin_flip_correlation_function_2D_flag,<sp/>Check_Flag[74]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;P_SANSPOL_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_p_sanspol_correlation_function_2D_flag,<sp/>Check_Flag[75]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;M_SANSPOL_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_m_sanspol_correlation_function_2D_flag,<sp/>Check_Flag[76]);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NucMag_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_magnetic_pair_distance_distribution_1D_flag,<sp/>Check_Flag[77]);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PM_SpinFlip_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_pair_distance_distribution_1D_flag,<sp/>Check_Flag[78]);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MP_SpinFlip_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mp_spin_flip_pair_distance_distribution_1D_flag,<sp/>Check_Flag[79]);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PP_NonSpinFlip_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pp_non_spin_flip_pair_distance_distribution_1D_flag,<sp/>Check_Flag[80]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MM_NonSpinFlip_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mm_non_spin_flip_pair_distance_distribution_1D_flag,<sp/>Check_Flag[81]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;P_SANSPOL_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_p_sanspol_pair_distance_distribution_1D_flag,<sp/>Check_Flag[82]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;M_SANSPOL_PairDist_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_m_sanspol_pair_distance_distribution_1D_flag,<sp/>Check_Flag[83]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;NucMag_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_nuclear_magnetic_correlation_function_1D_flag,<sp/>Check_Flag[84]);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PM_SpinFlip_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pm_spin_flip_correlation_function_1D_flag,<sp/>Check_Flag[85]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MP_SpinFlip_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mp_spin_flip_correlation_function_1D_flag,<sp/>Check_Flag[86]);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;PP_NonSpinFlip_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_pp_non_spin_flip_correlation_function_1D_flag,<sp/>Check_Flag[87]);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;MM_NonSpinFlip_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_mm_non_spin_flip_correlation_function_1D_flag,<sp/>Check_Flag[88]);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;P_SANSPOL_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_p_sanspol_correlation_function_1D_flag,<sp/>Check_Flag[89]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;M_SANSPOL_Corr_1D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_m_sanspol_correlation_function_1D_flag,<sp/>Check_Flag[90]);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseBool(line,<sp/></highlight><highlight class="stringliteral">&quot;Nuclear_2D&quot;</highlight><highlight class="normal">,<sp/>InputData-&gt;output_unpolarized_nuclear_SANS_cross_section_2D_flag,<sp/>Check_Flag[91]);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>the<sp/>User_Selection<sp/>to<sp/>integer<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Check_Flag[7]){</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Number_of_Comma<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number_Of_Comma_In_String(&amp;Number_of_Comma,<sp/>InputData-&gt;User_Selection);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputData-&gt;User_Selection_IndexArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[Number_of_Comma+1];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>User_Selection_To_Int_Array(InputData-&gt;User_Selection_IndexArray,<sp/>Number_of_Comma,<sp/>InputData-&gt;User_Selection);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Check<sp/>UserSelection<sp/>entries<sp/>that<sp/>are<sp/>transfered<sp/>to<sp/>integer<sp/>array:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>Number_of_Comma+1;<sp/>k++){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>UserSelection:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;User_Selection_IndexArray[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputData-&gt;Number_Of_User_Selections<sp/>=<sp/>Number_of_Comma<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Check_Flag[11]<sp/>&amp;&amp;<sp/>Check_Flag[12]){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compute_RotMat(InputData-&gt;RotMat_alpha,<sp/>InputData-&gt;RotMat_beta,<sp/>InputData-&gt;RotMat);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rotation<sp/>Matrix:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[3]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[6]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[4]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[7]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[5]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>InputData-&gt;RotMat[8]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>Error<sp/>Flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Error_Detect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>92;<sp/>k++){</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Check_Flag[k]<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>Check<sp/>Flag<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error_Detect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>Polarization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>P_norm<sp/>=<sp/>sqrt(pow(InputData-&gt;Polarization[0],<sp/>2)<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>pow(InputData-&gt;Polarization[1],<sp/>2)<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>pow(InputData-&gt;Polarization[2],<sp/>2));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(P_norm<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Polarization<sp/>magnitude<sp/>is<sp/>equal<sp/>to<sp/>zero!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(P_norm<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>P_norm<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputData-&gt;Polarization[0]<sp/>=<sp/>(InputData-&gt;Polarization[0])/P_norm;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputData-&gt;Polarization[1]<sp/>=<sp/>(InputData-&gt;Polarization[1])/P_norm;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputData-&gt;Polarization[2]<sp/>=<sp/>(InputData-&gt;Polarization[2])/P_norm;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Polarization<sp/>normalized<sp/>to<sp/>1!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>information<sp/>on<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Error_Detect){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;-&gt;<sp/>No<sp/>Errors<sp/>Detected&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check_InputFile_Flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##########################################################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##<sp/>Stop<sp/>-<sp/>Input<sp/>File<sp/>Interpreter<sp/>#########################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##########################################################################################&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Check_InputFile_Flag;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/NuMagSANSlib_InputFileInterpreter.h"/>
  </compounddef>
</doxygen>
