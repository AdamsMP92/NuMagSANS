// Author       : Michael Philipp ADAMS, M.Sc. 
// Company      : University of Luxembourg
// Department   : Department of Physics and Materials Sciences
// Group        : NanoMagnetism Group
// Group Leader : Prof. Andreas Michels
// Version      : 22 November 2024
// OS           : Linux Ubuntu
// Language     : CUDA C++

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// foldernames ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

NucDataPath = RealSpaceData/NucData;               // foldername where the nuclear data is stored
MagDataPath = RealSpaceData/MagData;		       // foldername where the magnetization data is stored
StructDataFilename = RealSpaceData/StructureData.csv; // foldername where the structure data is stored
foldernameSANSData = MagSANS_Output;     // foldername where the SANS data is to be stored

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Data selection /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

NucData_activate = 1;	  // activate nuclear data (activate: 1, deactivate: 0)
MagData_activate = 1;	  // activate magnetic data (activate: 1, deactivate: 0)
StructData_activate = 1;  // activate structure data (activae: 1, deactivate: 0)

Exclude_Zero_Moments = 0; // exclude magnetization data with zero magnetic moments (activate: 1, deactive: 0)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fourier approach select ////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Fourier_Approach = atomistic;	   // (atomistic, micromagnetic)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// data selection modi ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Loop_Modus = 0;		// select loop modus with 1, deselect loop modus with 0 (boolean selector)
Loop_From = 1;		// start index of the parameter loop 
Loop_To = 5; 		// end index of the parameter loop

User_Selection = {1}; // selection of file indices by user (ignored if loop modus is active)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// xyz-data unit factor ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

XYZ_Unit_Factor = 1;	// unit factor for the xyz-data, the expected unit is in nanometers, 
						// if e.g. the physical unit is meters, then unit factor is equal to 1e9

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// micromagnetic properties ///////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Cell_Magnetization = 1300e3;       // magnitude unit of the uniform cell magnetization in units of Ampere per Meter (A/m)
Cuboid_Cell_Size_x = 2;	           // cell size of the discretization box in x-direction in units of nanometers (nm)
Cuboid_Cell_Size_y = 2;		       // cell size of the discretization box in y-direction in units of nanometers (nm)
Cuboid_Cell_Size_z = 2;		       // cell size of the discretization box in z-direction in units of nanometers (nm)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// rotation matrix set-up /////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RotMat_alpha = 0.0;		// polar rotation angle in degree
RotMat_beta = 0.0;  	// azimuth rotation angle in degree (rotates the sample in the xy-plane)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// polarization vector ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Polarization_x = 0.0;	// x-component of the polarization vector
Polarization_y = 0.0;	// y-component of the polarization vector
Polarization_z = 1.0;	// z-component of the polarization vector

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// q- and r-space parameters //////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Number_Of_q_Points = 1000;		   	// number of points for the radial q-space coordinate	
Number_Of_theta_Points = 1000;		// number of points for the azimuthal q-space coordinate
 	
Number_Of_r_Points = 1000;		   	// number of points for the radial r-space coordinate
Number_Of_alpha_Points = 1000;      // number of points for the azimuthal r-space coordinate

q_max = 2.0;					// maximum value of the radial q-space coordinate in reciprocal nanometers (1/nm)	
r_max = 10.0;	        		// maxium value for the dimensionless radial real-space coordinate in nanometers (nm)
	
Scattering_Volume_V = 5.235987755982989e-25;	// scattering volume in cube meters (m^3)  [R = 5.0*1e-9] // ignored for micromagnetic approach!!

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
// output selections //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// activate output: 1, // deactivate output: 0

Fourier_Gamma = 1;         	// components of the magnetization cross correlation matrix          

Nuclear_2D = 1;				// 2D nuclear SANS cross section
Unpolarized_2D = 1;     	// 2D unpolarized magnetic SANS cross section
Polarized_2D = 1;			// 2D polarized magnetic SANS cross section
NuclearMagnetic_2D = 1;		// 2D nuclear-magnetic intereference SANS cross section
AVG_SpinFlip_2D = 1;        // 2D spin-filp magnetic SANS cross section
Chiral_2D = 1;           	// 2D chiral magnetic SANS cross section
PM_SpinFlip_2D = 1;      	// 2D plus-minus spin-flip channel SANS cross section
MP_SpinFlip_2D = 1;     	// 2D minus-plus spin-flip channel SANS cross section
PP_NonSpinFlip_2D = 1;      // 2D plus-plus non-spin-flip channel SANS cross section
MM_NonSpinFlip_2D = 1;     	// 2D minus-minus non-spin-flip channel SANS cross section
P_SANSPOL_2D = 1;			// 2D plus sanspol magnetic SANS cross section
M_SANSPOL_2D = 1;			// 2D minus sanspol magnetic SANS cross section

Nuclear_1D = 1;             // 1D nuclear SANS cross section (azimuthal averaged)
Unpolarized_1D = 1;      	// 1D unpolarized SANS cross section (azimuthal averaged)
AVG_SpinFlip_1D = 1;        // 1D spin-flip SANS cross section (azimuthal averaged)
Chiral_1D = 1;           	// 1D chiral SANS cross section (absolute value azimuthal averaged)

Unpolarized_PairDist_1D = 1;    // 1D pair-distance distribution function of the unpolarized SANS cross section
Unpolarized_Corr_1D = 1;        // 1D correlation function of the unpolarized SANS cross section

SpinFlip_PairDist_1D = 1;       // 1D pair-distance distribution function of the spin-flip SANS cross section
SpinFlip_Corr_1D = 1;           // 1D correlation function of the spin-flip SANS cross section

Chiral_PairDist_1D = 1;         // 1D pair-distance distribution function of the chiral SANS cross section
Chiral_Corr_1D = 1;             // 1D correlation function of the chiral SANS cross section

Unpolarized_Corr_2D = 1;		// 2D correlation function of the unpolarized SANS cross section
SpinFlip_Corr_2D = 1;			// 2D correlation function of the spin-flip SANS cross section
Chiral_Corr_2D = 1;				// 2D correlation function of the chiral SANS cross section
